'use strict';

const _ = require('lodash'),
      utils = require('../../../utils'),
      driver = utils.getDriver(),
      C = driver.constants,
      strongholds = driver.strongholds;

module.exports = function (object, scope) {
    const templates = strongholds.templates,
          coreRewards = strongholds.coreRewards,
          coreAmounts = strongholds.coreAmounts,
          coreDensities = strongholds.coreDensities;
    const bulk = scope.bulk,
          roomController = scope.roomController;


    if (roomController) {
        bulk.update(roomController, {
            user: null,
            level: 0,
            progress: 0,
            downgradeTime: null,
            safeMode: null,
            safeModeAvailable: 0,
            safeModeCooldown: null,
            isPowerEnabled: false,
            effects: null
        });
    }

    if (!object || !object.depositType || !coreRewards[object.depositType] || !_.some(coreRewards[object.depositType]) || !object.templateName || !templates[object.templateName]) {
        console.log(`No core rewards for ${object.room}`);
        console.log(JSON.stringify(object));
        console.log(`object.depositType: ${object.depositType}`);
        console.log(`_.some(coreRewards[object.depositType]): ${_.some(coreRewards[object.depositType])}`);
        return;
    }

    const rewardLevel = templates[object.templateName].rewardLevel;
    const rewards = coreRewards[object.depositType].slice(0, 1 + rewardLevel).map(r => _.isArray(r) ? _.sample(r) : r);
    const rewardDensities = coreDensities.slice(0, 1 + rewardLevel);

    console.log(`Core rewards for ${object.room}: ${JSON.stringify(rewards)}`);
    console.log(JSON.stringify(coreRewards[object.depositType], 0, 2));

    const store = utils.calcReward(_.object(rewards, rewardDensities), coreAmounts[rewardLevel]);

    bulk.update(object, { store });

    driver.config.emit('strongholdDestroyed', object, scope);
};
//# sourceMappingURL=../../../sourcemaps/processor/intents/invader-core/destroy.js.map
